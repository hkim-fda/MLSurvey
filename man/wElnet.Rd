% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/welnet.R
\name{wElnet}
\alias{wElnet}
\title{Weighted Elastic Net prediction models for complex survey data}
\usage{
wElnet(
  data = NULL,
  col.y = NULL,
  col.x = NULL,
  cluster = NULL,
  strata = NULL,
  weights = NULL,
  design = NULL,
  family = c("gaussian", "binomial"),
  lambda.grid = NULL,
  alpha = 1,
  method = c("dCV", "JKn", "bootstrap", "subbootstrap", "BRR", "split", "extrapolation"),
  k = 10,
  R = 1,
  B = 200,
  dCV.sw.test = FALSE,
  train.prob = 0.7,
  method.split = c("dCV", "bootstrap", "subbootstrap"),
  print.rw = FALSE
)
}
\arguments{
\item{data}{A data frame with information about the response variable and covariates, as well as sampling weights, strata, and cluster indicators. It could be \code{NULL} if the sampling design were replaced in the \code{design} argument.}

\item{col.y}{A numeric value indicating the index of the response variable or a string of the response variable name .}

\item{col.x}{A numeric vector indicating indices of covariates or a vector of strings indicating these column names.}

\item{cluster}{A string of a cluster identifier. It could be \code{NULL} if the sampling design were plugged in the \code{design} argument.}

\item{strata}{A string of a strata identifier. It could be \code{NULL} if the sampling design were plugged in the \code{design} argument.}

\item{weights}{A string of a sampling weights' identifier. It could be \code{NULL} if the sampling design were included in the \code{design} argument.}

\item{design}{An object of class \code{survey.design} generated by \code{\link[survey]{svydesign}}. It could be \code{NULL} if information about \code{cluster}, \code{strata}, \code{weights} and \code{data} were given.}

\item{family}{A string indicating a \code{glm} family object for fitting weighted elastic net models. Choose between \code{gaussian} (to fit linear models) or \code{binomial} (for logistic models).}

\item{lambda.grid}{A vector of a grid for penalization parameters. The default option is \code{lambda.grid = NULL} generated by the function \code{glmnet::glmnet()}.}

\item{alpha}{A numeric value of the elastic net mixing parameter \deqn{0 \le \alpha \le 1,} where \code{alpha = 1} for the LASSO penalty, and \code{alpha = 0} for the Ridge penalty.}

\item{method}{A string indicating a method of replicate weights. Choose one of these: \code{JKn}, \code{dCV}, \code{bootstrap}, \code{subbootstrap}, \code{BRR}, \code{split}, \code{extrapolation}.}

\item{k}{An integer. The number of folds for the \code{dCV} method. Default is \code{k=10}.}

\item{R}{An integer. The number of times the sample is partitioned for \code{dCV}, \code{split} or \code{extrapolation} method. Default is \code{R=1}.}

\item{B}{An integer. The number of bootstrap re-samples for \code{bootstrap} and \code{subbootstrap} methods. Default is \code{B=200}.}

\item{dCV.sw.test}{A logical value indicating the method for estimating the error for \code{dCV} method. \code{FALSE}, (the default option) estimates the error for each test set and defines the cross-validated error based on the average strategy.
Option \code{TRUE} estimates the cross-validated error based on the pooling strategy.}

\item{train.prob}{A numeric between 0 and 1 that sets the proportion of clusters (for the method \code{split}) or strata (for the method \code{extrapolation}) in training sets. Default is \code{train.prob = 0.7}.}

\item{method.split}{A string of one the following replicate weights methods to be implemented under the \code{split} method in the \code{method} argument: \code{dCV}, \code{bootstrap} or \code{subbootstrap}.}

\item{print.rw}{A logical value. If \code{TRUE}, the data set with the replicate weights is saved in the output object. Default \code{print.rw=FALSE}.}
}
\value{
The output object of the function \code{wElnet()} is an object of class \code{w.elnet}:
\itemize{
\item \code{lambda}: A list containing information of two elements:
\itemize{
\item \code{grid}: A vector of all grid values for the tuning parameter.
\item \code{min}: A numeric value of an optimal tuning parameter minimizing the average error.
}
\item \code{error}: A list containing information of two elements:
\itemize{
\item \code{average}: A numeric vector indicating the average error for each tuning parameter in \code{lambda$grid}.
\item \code{all}: A numeric matrix indicating the error of each test set for each tuning parameter.
}
\item \code{model}: A list containing information of two elements in relation to the fitted models.
\itemize{
\item \code{grid}: A list containing information on models fitted by each tuning parameter in the \code{lambda$grid}.
\itemize{
\item \code{a0}: A numeric vector of model intercepts across the whole grid of tuning parameters (hence, of the same length as \code{lambda$grid}).
\item \code{beta}: A matrix of regression coefficients for all the covariates across the whole grid of tuning parameters (the dimension of the matrix is the size of covariates by the length of \code{lambda$grid}).
\item \code{df}: A numeric vector of the degrees of freedom (i.e., the number of coefficients different from zero) across the whole grid of tuning parameters  (hence, of the same length as \code{lambda$grid}).
}
\item \code{final_model}: An object with S3 class \code{glmnet} found in r-\code{glmnet}.  A list containing information on the final model fitted by the optimal tuning parameter, \code{lambda$min}.
i.e., the optimal tuning parameter selected from \code{lambda$grid}.
}
\item \code{data.rw}: A data frame containing the original data set and the replicate weights added to define training and test sets. Only included in the output object if \code{print.rw=TRUE}.
\item \code{call}: The call that executes this function producing the object of \code{w.elnet}.
}
\itemize{
\item Note that both \code{model} and \code{final_model} are fitted by the original \code{data}, not by one of the generated training sets by replicate weights.
}
}
\description{
A function fitting Elastic Net prediction (linear or logistic) models with sampling weights in the estimation process
to select a lambda minimizing the weighted mean error for a selected replicate weights method.  This is extended from
\code{wlasso::wlasso()}, which is now officially available in \code{\link[svyVarSel]{wlasso}}.  This function is currently run with a single value of \code{alpha} but will
support for the operation with a sequence of \code{alpha} soon.
}
\examples{

 data(nhanes2013_sbc)
# alpha can be selected based on `glmnet::glmnet()`:
alpha <- c(0.000, 0.001, 0.008, 0.027, 0.064, 0.125, 0.216, 0.343, 0.512, 0.729, 1.000)
en.dcv <- wElnet(data = nhanes2013_sbc,
              col.y = "HBP", col.x = 2:61,
              family = "binomial", alpha = 0.729,
              cluster = "SDMVPSU", strata = "SDMVSTRA", weights = "WTSAF2YR",
              method = "dCV", k=10, R=20)

# Or equivalently:
des <- survey::svydesign(ids=~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTSAF2YR,
                              nest = TRUE, data = nhanes2013_sbc)
en.dcv <- wElnet(col.y = "HBP", col.x = 2:61, design = des,
              family = "binomial", alpha = alpha[10],
              method = "dCV", k=10, R=20)

}
\seealso{
\code{\link[svyVarSel:wlasso]{svyVarSel::wlasso()}} for detailed arguments.

\code{\link[glmnet:glmnet]{glmnet::glmnet()}} for detailed arguments and return values.
}
